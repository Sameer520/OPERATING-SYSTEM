#include <stdio.h>
#include <stdlib.h>
typedef struct memory
{
	int id,size,allocated,free;
};
memory m[20];
void init()
{
	for(int i=0;i<20;i++)
	{
		m[i].allocated=0;
		m[i].id=-1;
		m[i].size=rand();
		m[i].free=m[i].size;
	}
}
void best(int id,int size)
{
	for(int i=0;i<20;i++)
	{
		if(m[i].allocated==0 && m[i].size>=size)
		{
			m[i].id=id;
			m[i].free-=size;
			m[i].allocated=1;
			return;
		}
	}
	printf("Unable to Allocate Memory!!");
}
void print()
{
	printf("Size\t\tAllocated\t\tPID\t\tFREE\n");
	for(int i=0;i<20;i++)
	{
		printf("%d\t\t%d\t\t\t%d\t\t%d\n",m[i].size,m[i].allocated,m[i].id,m[i].free);
	}
}
int main()
{
	init();
	int a,id,size;
	while(1)
	{
		printf("1.Allocate\n2.List_Memory\n3.Exit\nEnter Choice:");
		scanf("%d",&a);
		switch(a)
		{
			case 1:
				printf("Enter the PID and Size:");
				scanf("%d%d",&id,&size);
				best(id,size);
				break;
			case 2:
				print();
				break;
			default:
				return 0;
		}
	}
}
