#include <stdio.h>
#include <pthread.h>
pthread_mutex_t mutex;
void* synchorize(void *arg)
{
	int tid=*(int *)arg;
	pthread_mutex_lock(&mutex);
	printf("Process-%d Entered the Critical Section\n",tid);
	printf("Process-%d is Running\n",tid);
	printf("Process-%d is Leaving the Critical Section\n",tid);
	pthread_mutex_unlock(&mutex);
	pthread_exit(NULL);
}
int main()
{
	pthread_t tids[5];
	int tid[5];
	pthread_mutex_init(&mutex,NULL);
	for(int i=0;i<5;i++)
	{
		tid[i]=i;
		pthread_create(&tids[i],NULL,synchorize,(void*)&tid[i]);
	}
	for(int i=0;i<5;i++)
	{
		pthread_join(tids[i],NULL);
	}
	pthread_mutex_destroy(&mutex);
}
